{"version":3,"sources":["algorithms/bubbleSorting.js","AppStyles.js","App.jsx","index.js"],"names":["getBubbleSortingAnimations","arr","arrCopy","animations","i","length","min","j","push","type","data","copy","Title","styled","h1","Wrapper","section","Button","button","List","div","Item","Buttons","App","useState","array","setArray","sortedArray","setSortedArray","generateArray","setGenerateArray","sleep","ms","Promise","resolve","setTimeout","parseAnimations","a","animation","document","querySelector","style","backgroundColor","bubbleSorting","alg","onClick","arrayCopy","randomLength","Math","random","randomNumber","round","map","number","index","key","height","id","Global","createGlobalStyle","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.d404d5d9.chunk.js","sourcesContent":["export function getBubbleSortingAnimations(arr = []) {\n  const arrCopy = [...arr];\n  const animations = [];\n\n  for (let i = 0; i < arr.length; i++) {\n    let min = i;\n\n    for (let j = i + 1; j < arr.length; j++) {\n      animations.push({\n        type: 'select',\n        data: [i, j],\n      });\n\n      if (arrCopy[j] < arrCopy[min]) {\n        min = j;\n      }\n    }\n\n    if (min !== i) {\n      const copy = arrCopy[i];\n\n      arrCopy[i] = arrCopy[min];\n      arrCopy[min] = copy;\n      animations.push({\n        type: 'swap',\n        data: [i, min],\n        arr: [...arrCopy],\n      });\n    }\n  }\n\n  return animations;\n}\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  text-align: center;\n  margin-top: 20px;\n`;\n\nexport const Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nexport const Button = styled.button`\n  text-align: center;\n  padding: 5px 10px;\n  margin-right: 5px;\n  border: 1px solid black;\n  background: #fff;\n  border-radius: 3px;\n  cursor: pointer;\n  transition: color 0.2s ease, background 0.2s ease;\n\n  &:hover {\n    color: #fff;\n    background: #000;\n  }\n`;\n\nexport const List = styled.div`\n  display: flex;\n  align-items: flex-end;\n  flex-wrap: wrap;\n  margin: 20px;\n`;\n\nexport const Item = styled.div`\n  width: 0.3vw;\n  background: #000;\n  margin-right: 2px;\n`;\n\nexport const Buttons = styled.div`\n  display: flex;\n`;\n","import React, { useState } from 'react';\nimport { getBubbleSortingAnimations } from './algorithms/bubbleSorting';\nimport { Title, Wrapper, Button, List, Item, Buttons } from './AppStyles';\n\nexport const App = () => {\n  const [array, setArray] = useState([]);\n  const [sortedArray, setSortedArray] = useState(false);\n  const [generateArray, setGenerateArray] = useState(false);\n\n  const arrayGeneration = () => {\n    const arrayCopy = [];\n    const randomLength = Math.random() * 100 + 100;\n\n    for (let i = 0; i < randomLength; i++) {\n      const randomNumber = Math.round(Math.random() * 205);\n\n      arrayCopy.push(randomNumber);\n    }\n\n    setArray(arrayCopy);\n    setSortedArray(false);\n    setGenerateArray(true);\n  };\n\n  const sleep = ms => new Promise(\n    resolve => setTimeout(resolve, ms),\n  );\n\n  const parseAnimations = async(animations) => {\n    for (const animation of animations) {\n      const { type, data, arr } = animation;\n      const [i, j] = data;\n\n      if (type === 'swap') {\n        document.querySelector(`#item-${i}`).style.backgroundColor = '#ff0000';\n        document.querySelector(`#item-${j}`).style.backgroundColor = '#ff0000';\n      } else if (type === 'select') {\n        document.querySelector(`#item-${i}`).style.backgroundColor = '#0c8e3e';\n        document.querySelector(`#item-${j}`).style.backgroundColor = '#ff0000';\n      }\n\n      await sleep(5);\n\n      if (type === 'swap' && arr) {\n        setArray(arr);\n      }\n\n      document.querySelector(`#item-${i}`).style.backgroundColor = '#000000';\n      document.querySelector(`#item-${j}`).style.backgroundColor = '#000000';\n    }\n\n    await setGenerateArray(false);\n  };\n\n  const bubbleSorting = async(alg) => {\n    let animations = [];\n\n    setSortedArray(true);\n\n    if (alg === 'select') {\n      animations = getBubbleSortingAnimations(array);\n    }\n\n    await parseAnimations(animations);\n  };\n\n  return (\n    <div>\n      <Title>Sorting Array</Title>\n\n      <Wrapper>\n        <Buttons>\n          {!generateArray && (\n            <Button\n              type=\"button\"\n              onClick={arrayGeneration}\n            >\n              Generate new Array\n            </Button>\n          )}\n\n          {!sortedArray && (\n            <Button\n              type=\"button\"\n              onClick={() => bubbleSorting('select')}\n            >\n              Sort Array\n            </Button>\n          )}\n        </Buttons>\n\n        <List>\n          {array.map((number, index) => (\n            <Item\n              key={index}\n              style={{ height: `${number}px` }}\n              id={`item-${index}`}\n            />\n          ))}\n        </List>\n      </Wrapper>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport { App } from './App';\n\nconst Global = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n  }\n`;\n\nReactDOM.render(\n  <>\n    <Global />\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}