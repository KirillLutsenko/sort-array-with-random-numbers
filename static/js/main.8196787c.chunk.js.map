{"version":3,"sources":["AppStyles.js","App.jsx","index.js"],"names":["Title","styled","h1","Wrapper","section","Button","button","List","ul","Item","li","App","useState","array","setArray","randomLength","Math","random","useEffect","arrayCopy","i","randomNumber","round","push","sortArray","a","resOfCompare","copyOfArray","length","prev","next","type","onClick","map","number","index","key","Global","createGlobalStyle","ReactDOM","render","document","getElementById"],"mappings":"ySAEaA,EAAQC,IAAOC,GAAV,6FAMLC,EAAUF,IAAOG,QAAV,sHAOPC,EAASJ,IAAOK,OAAV,yNAcNC,EAAON,IAAOO,GAAV,+CAIJC,EAAOR,IAAOS,GAAV,uEC9BJC,EAAM,WAAO,IAAD,EACGC,mBAAS,IADZ,mBAChBC,EADgB,KACTC,EADS,KAEjBC,EAA+B,IAAhBC,KAAKC,SAAkB,IAE5CC,qBAAU,WAGR,IAFA,IAAMC,EAAY,GAETC,EAAI,EAAGA,EAAIL,EAAcK,IAAK,CACrC,IAAMC,EAAeL,KAAKM,MAAsB,IAAhBN,KAAKC,UAErCE,EAAUI,KAAKF,GAGjBP,EAASK,KACR,IAEH,IAAMK,EAAS,uCAAG,oCAAAC,EAAA,sDAIhB,IAHIC,GAAe,EACbC,EAFU,YAEQd,IAEhBa,GAGN,IAFAA,GAAe,EAENN,EAAI,EAAGA,EAAIO,EAAYC,OAAQR,IAClCO,EAAYP,EAAI,GAAKO,EAAYP,KACnCM,GAAe,EAETG,EAAOF,EAAYP,EAAI,GACvBU,EAAOH,EAAYP,GAEzBO,EAAYP,EAAI,GAAKU,EACrBH,EAAYP,GAAKS,GAKvBf,EAASa,GApBO,2CAAH,qDAuBf,OACE,6BACE,kBAAC3B,EAAD,sBAEA,kBAACG,EAAD,KACE,kBAACE,EAAD,CACE0B,KAAK,SACLC,QAASR,GAFX,cAOA,kBAACjB,EAAD,KACGM,EAAMoB,KAAI,SAACC,EAAQC,GAAT,OACT,kBAAC1B,EAAD,CAAM2B,IAAKD,GACRD,UCpDTG,EAASC,YAAH,kIASZC,IAASC,OACP,oCACE,kBAACH,EAAD,MACA,kBAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.8196787c.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  margin-top: 20px;\n`;\n\nexport const Wrapper = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-top: 20px;\n`;\n\nexport const Button = styled.button`\n  width: 100px;\n  height: 30px;\n  background: #fff;\n  border-radius: 3px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    color: #fff;\n    background: #000;\n  }\n`;\n\nexport const List = styled.ul`\n  margin: 20px 0;\n`;\n\nexport const Item = styled.li`\n  text-align: center;\n  font-size: 18px;\n`;\n","import React, { useState, useEffect } from 'react';\nimport { Title, Wrapper, Button, List, Item } from './AppStyles';\n\nexport const App = () => {\n  const [array, setArray] = useState([]);\n  const randomLength = Math.random() * 1000 + 1000;\n\n  useEffect(() => {\n    const arrayCopy = [];\n\n    for (let i = 0; i < randomLength; i++) {\n      const randomNumber = Math.round(Math.random() * 205);\n\n      arrayCopy.push(randomNumber);\n    }\n\n    setArray(arrayCopy);\n  }, []);\n\n  const sortArray = async() => {\n    let resOfCompare = false;\n    const copyOfArray = [...array];\n\n    while (!resOfCompare) {\n      resOfCompare = true;\n\n      for (let i = 1; i < copyOfArray.length; i++) {\n        if (copyOfArray[i - 1] > copyOfArray[i]) {\n          resOfCompare = false;\n\n          const prev = copyOfArray[i - 1];\n          const next = copyOfArray[i];\n\n          copyOfArray[i - 1] = next;\n          copyOfArray[i] = prev;\n        }\n      }\n    }\n\n    setArray(copyOfArray);\n  };\n\n  return (\n    <div>\n      <Title>Sorting Array</Title>\n\n      <Wrapper>\n        <Button\n          type=\"button\"\n          onClick={sortArray}\n        >\n          Sort Array\n        </Button>\n\n        <List>\n          {array.map((number, index) => (\n            <Item key={index}>\n              {number}\n            </Item>\n          ))}\n        </List>\n      </Wrapper>\n    </div>\n  );\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createGlobalStyle } from 'styled-components';\nimport { App } from './App';\n\nconst Global = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n  }\n`;\n\nReactDOM.render(\n  <>\n    <Global />\n    <App />\n  </>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}